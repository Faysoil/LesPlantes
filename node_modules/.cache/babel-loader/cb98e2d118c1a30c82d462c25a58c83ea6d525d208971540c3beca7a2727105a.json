{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bacar\\\\Desktop\\\\lesplantasses\\\\src\\\\pages\\\\Connexion.js\",\n  _s = $RefreshSig$();\nimport logo from '../logo.svg';\nimport '../App.css';\nimport Navbar from '../Navbar/Navbar';\nimport { useState } from \"react\";\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/login', {\n        email,\n        password\n      });\n      if (response.status === 200) {\n        // Redirect to dashboard after successful login\n        history.push('/dashboard');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Incorrect email or password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 6\n  }, this);\n};\n_s(LoginForm, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\n\n// // Assuming you have an input field for username and password, and a \"Sign in\" button with an ID of \"signInBtn\"\n\n// // Get the input field values\n// const username = document.getElementById('usernameInput').value;\n// const password = document.getElementById('passwordInput').value;\n\n// // Check if the username and password are correct (replace this with your own validation logic)\n// const isValidCredentials = validateCredentials(username, password);\n\n// // Disable or enable the \"Sign in\" button based on the validation result\n// if (isValidCredentials) {\n//   document.getElementById('signInBtn').disabled = false;\n// } else {\n//   document.getElementById('signInBtn').disabled = true;\n// }\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["logo","Navbar","useState","React","useNavigate","axios","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","navigate","handleFormSubmit","event","preventDefault","response","post","status","history","push","error","console","alert","onSubmit","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bacar/Desktop/lesplantasses/src/pages/Connexion.js"],"sourcesContent":["import logo from '../logo.svg';\r\nimport '../App.css';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport { useState } from \"react\";\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const navigate = useNavigate();\r\n \r\n   const handleFormSubmit = async (event) => {\r\n     event.preventDefault();\r\n     try {\r\n       const response = await axios.post('/api/login', { email, password });\r\n       if (response.status === 200) {\r\n         // Redirect to dashboard after successful login\r\n         history.push('/dashboard');\r\n       }\r\n     } catch (error) {\r\n       console.error(error);\r\n       alert('Incorrect email or password.');\r\n     }\r\n   };\r\n \r\n   return (\r\n     <form onSubmit={handleFormSubmit}>\r\n       <label>\r\n         Email:\r\n         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n       </label>\r\n       <br />\r\n       <label>\r\n         Password:\r\n         <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n       </label>\r\n       <br />\r\n       <button type=\"submit\">Login</button>\r\n     </form>\r\n   );\r\n };\r\n \r\n export default LoginForm;\r\n\r\n\r\n// // Assuming you have an input field for username and password, and a \"Sign in\" button with an ID of \"signInBtn\"\r\n\r\n// // Get the input field values\r\n// const username = document.getElementById('usernameInput').value;\r\n// const password = document.getElementById('passwordInput').value;\r\n\r\n// // Check if the username and password are correct (replace this with your own validation logic)\r\n// const isValidCredentials = validateCredentials(username, password);\r\n\r\n// // Disable or enable the \"Sign in\" button based on the validation result\r\n// if (isValidCredentials) {\r\n//   document.getElementById('signInBtn').disabled = false;\r\n// } else {\r\n//   document.getElementById('signInBtn').disabled = true;\r\n// }"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,aAAa;AAC9B,OAAO,YAAY;AACnB,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,QAAQ,GAAGV,WAAW,EAAE;EAE9B,MAAMW,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxCA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,YAAY,EAAE;QAAET,KAAK;QAAEE;MAAS,CAAC,CAAC;MACpE,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBE,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,oBACElB,OAAA;IAAMmB,QAAQ,EAAEX,gBAAiB;IAAAY,QAAA,gBAC/BpB,OAAA;MAAAoB,QAAA,GAAO,QAEL,eAAApB,OAAA;QAAOqB,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEnB,KAAM;QAACoB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzE,eACR7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACN7B,OAAA;MAAAoB,QAAA,GAAO,WAEL,eAAApB,OAAA;QAAOqB,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEjB,QAAS;QAACkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClF,eACR7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACN7B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/B;AAEX,CAAC;AAAC3B,EAAA,CAlCGD,SAAS;EAAA,QAGKJ,WAAW;AAAA;AAAAiC,EAAA,GAHzB7B,SAAS;AAoCd,eAAeA,SAAS;;AAGzB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}