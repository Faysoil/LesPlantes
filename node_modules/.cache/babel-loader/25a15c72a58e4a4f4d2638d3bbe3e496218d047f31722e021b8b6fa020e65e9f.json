{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst User = require('../../models/user');\n\n//get all users\nrouter.get('/', async (req, res) => {\n  try {\n    const users = await User.find();\n    res.json(users);\n  } catch (error) {\n    res.status(500).json({\n      message: error.message\n    });\n  }\n});\n\n// create user \nrouter.post('/', async (req, res) => {\n  const user = new User({\n    ...req.body\n  });\n  try {\n    const newUser = await user.save();\n    res.status(201).json(newUser);\n  } catch (error) {\n    res.status(400).json({\n      message: error.message\n    });\n  }\n});\n\n//get user\nrouter.get('/:idUser', getUserByIdUser, (req, res) => {\n  res.json(res.user);\n});\n\n//update user \nrouter.patch('/:id', getUser, async (req, res) => {\n  if (req.body.name != null) {\n    res.user.name = req.body.name;\n  }\n  if (req.body.lastName != null) {\n    res.user.lastName = req.body.lastName;\n  }\n  if (req.body.age != null) {\n    res.user.age = req.body.age;\n  }\n  if (req.body.telephone != null) {\n    res.user.telephone = req.body.telephone;\n  }\n  if (req.body.email != null) {\n    res.user.email = req.body.email;\n  }\n  if (req.body.email != null) {\n    res.user.email = req.body.email;\n  }\n  if (req.body.adresse != null) {\n    res.user.adresse = req.body.adresse;\n  }\n  if (req.body.attesttation != null) {\n    res.user.attesttation != req.body.adresse;\n  }\n  try {\n    const updatedUser = await res.user.save();\n    res.json(updatedUser);\n  } catch (err) {\n    res.status(400).json({\n      message: err.message\n    });\n  }\n});\n\n//delete user \nrouter.delete('/:id', getUser, async (req, res) => {\n  try {\n    await res.user.remove();\n    res.json({\n      message: 'Deleted user'\n    });\n  } catch (err) {\n    res.status(500).json({\n      message: err.message\n    });\n  }\n});\nasync function getUser(req, res, next) {\n  try {\n    user = await User.findById(req.params.id);\n    if (!user) {\n      return res.status(404).json({\n        message: 'Cannot find this user'\n      });\n    }\n  } catch (error) {\n    return res.status(500).json({\n      message: error.message\n    });\n  }\n  res.user = user;\n  next();\n}\nasync function getUserByIdUser(req, res, next) {\n  try {\n    user = await User.find({\n      idUser: req.params.idUser\n    });\n    if (!user) {\n      return res.status(404).json({\n        message: 'Cannot find this user'\n      });\n    }\n  } catch (error) {\n    return res.status(500).json({\n      message: error.message\n    });\n  }\n  res.user = user;\n  next();\n}\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","User","get","req","res","users","find","json","error","status","message","post","user","body","newUser","save","getUserByIdUser","patch","getUser","name","lastName","age","telephone","email","adresse","attesttation","updatedUser","err","delete","remove","next","findById","params","id","idUser","module","exports"],"sources":["C:/Users/bacar/Desktop/lesplantasses/src/routes/users.js"],"sourcesContent":["const express = require('express')\r\nconst router = express.Router()\r\nconst User = require('../../models/user')\r\n\r\n\r\n//get all users\r\nrouter.get('/', async (req, res) => {\r\n    try {\r\n        const users = await User.find()\r\n        res.json(users)\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message })\r\n    }  \r\n})\r\n\r\n// create user \r\nrouter.post('/', async (req, res) => {\r\n    const user = new User({\r\n        ...req.body, \r\n    })\r\n    try {\r\n        const newUser = await user.save()\r\n        res.status(201).json(newUser)\r\n    } catch (error) {\r\n        res.status(400).json({ message: error.message })\r\n    }\r\n})\r\n\r\n//get user\r\nrouter.get('/:idUser', getUserByIdUser, (req, res) => {\r\n    res.json(res.user)\r\n})\r\n\r\n//update user \r\nrouter.patch('/:id', getUser, async (req, res) => {\r\n     if (req.body.name != null) {\r\n        res.user.name = req.body.name\r\n      }\r\n      if (req.body.lastName != null) {\r\n        res.user.lastName = req.body.lastName\r\n      }\r\n      if (req.body.age != null) {\r\n        res.user.age = req.body.age\r\n      }\r\n      if (req.body.telephone != null) {\r\n        res.user.telephone = req.body.telephone\r\n      }\r\n      if (req.body.email != null) {\r\n        res.user.email = req.body.email\r\n      }\r\n      if (req.body.email != null) {\r\n        res.user.email = req.body.email\r\n      }\r\n      if (req.body.adresse != null) {\r\n        res.user.adresse = req.body.adresse \r\n      }\r\n      if (req.body.attesttation != null) {\r\n        res.user.attesttation != req.body.adresse\r\n      }\r\n      try {\r\n        const updatedUser = await res.user.save()\r\n        res.json(updatedUser)\r\n      } catch (err) {\r\n        res.status(400).json({ message: err.message })\r\n      }\r\n})\r\n\r\n//delete user \r\nrouter.delete('/:id', getUser, async (req, res) => {\r\n    try {\r\n        await res.user.remove()\r\n        res.json({ message: 'Deleted user' })\r\n      } catch (err) {\r\n        res.status(500).json({ message: err.message })\r\n      }\r\n})\r\n\r\nasync function getUser(req, res, next) {\r\n    try {\r\n        user = await User.findById(req.params.id)\r\n        if (!user) {\r\n            return res.status(404).json({ message : 'Cannot find this user'})\r\n        }\r\n    } catch (error) {\r\n        return res.status(500).json({ message: error.message })\r\n    }\r\n\r\n    res.user = user\r\n    next()\r\n}\r\n\r\nasync function getUserByIdUser(req, res, next) {\r\n  try {\r\n      user = await User.find({ idUser : req.params.idUser })\r\n      if (!user) {\r\n          return res.status(404).json({ message : 'Cannot find this user'})\r\n      }\r\n  } catch (error) {\r\n      return res.status(500).json({ message: error.message })\r\n  }\r\n\r\n  res.user = user\r\n  next()\r\n}\r\n\r\n\r\n\r\nmodule.exports = router"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}